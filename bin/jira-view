#! /usr/bin/env python3

import webbrowser
import argparse
import pygit2
import re
import os


def main(ticket: str = None, domain: str = None) -> None :
    """Open a Jira ticket in the default browser."""

    while domain is None and os.path.exists("./.atlassian") :
        with open("./.atlassian", "r") as f :
            domain = f.read().rstrip()

        try :
            domain = re.findall("jira: (.+)", domain)[0]
        except IndexError :
            domain = None
            pass

    while domain is None and os.path.exists("./.jira") :
        # can specify a domain in a .jira file; dcf format preferred
        with open("./.jira", "r") as f :
            domain = f.read().rstrip()
        
        try :
            domain = re.findall("domain: (.+)", domain)[0]
        except IndexError :
            domain = None
            pass

    if domain is None and os.path.exists("./DESCRIPTION") :
        # useful for R related projects
        with open("./DESCRIPTION", "r") as f :
            desc = f.read().rstrip()

        try :
            domain = re.findall("Config/jira: (.+)", desc)[0]
        except IndexError :
            domain = None
            pass

    if domain is None :
        domain = os.getenv("JIRA_DOMAIN", None)

    if domain is None :
        raise ValueError(
            "Domain not found." + 
            " This can be passed in the call, saved in DESCRIPTION or .jira" +
            " or stored as a default in env JIRA_DOMAIN."
        )

    if not domain.startswith("http") :
        domain = f"https://{domain}"

    if ticket is None :
        branch = pygit2.Repository('.').head.shorthand

        try :
            ticket = re.findall("(^[A-Z]+-?[0-9]+)(-.+)?", branch)[0][0]
        except IndexError :
            print("Could not find a ticket in the current branch: " + branch)
            return None

    url = f"{domain}/browse/{ticket}"
    print("Opening Jira ticket: " + url)
    webbrowser.open(url)
    return None


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Open a Jira ticket in the default browser.")
    parser.add_argument("ticket", nargs="?", default=None)
    parser.add_argument("domain", nargs="?", default=None)
    args = parser.parse_args()
    main(args.ticket, args.domain)
