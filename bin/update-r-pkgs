#!/usr/bin/env -S Rscript --vanilla 

ca <- scribe::command_args()
ca$add_argument("...", "ignore", default = character())
ca$add_argument("-u", "--upgrade", action = "flag", default = FALSE)
ca$add_argument("-d", "--dep", "--dependencies", default = NA)
args <- ca$parse()

# FIXME need to implement default for dots
args$ignore <- unique(c(args$ignore, "pak", "scribe"))

msg <- function(...) message("[msg] ", ...)

options(
  pak.no_extra_messages = TRUE,
  repos = c(CRAN = "https://cloud.r-project.org")
)

msg("Checking for old packages")
pkgs <- row.names(utils::old.packages(lib.loc = .libPaths()[[1]]))
# pkgs <- setdiff(pkgs, "MASS") # current issue with MASS

if ("pak" %in% pkgs) {
  msg("You may want to call pak-install")
}

pkgs <- setdiff(pkgs, args$ignore)

if (length(args$ignore)) {
  args$ignore <- paste0(args$ignore, "=?ignore")
}

# pkgs <- paste0("any::", pkgs, "?reinstall")

n <- length(pkgs)
msg("Old packages found: ", n)

if (n == 0L) {
  msg("No old packages found. Exiting")
  quit()
}

# pak::pkg_install(paste0("any::", pkgs, "?reinstall"), dependencies = dep)

if (!fuj::is_windows()) {
  if (identical(osVersion, "Ubuntu 22.10")) {
    os <- "ubuntu"
    os_release <- "20.04"
  } else {
    os <- NULL
    os_release <- NULL
  }

  needs <- try(pak::pkg_system_requirements(
    pkgs,
    os = os,
    os_release = os_release,
    execute = TRUE
  ))

  if (inherits(needs, "try-error")) {
    msg("Failed to run installations")
  }
}

pak::pak(
  pkg = c(pkgs, args$ignore),
  upgrade = args$upgrade,
  dependencies = args$dependencies,
  ask = FALSE
)
