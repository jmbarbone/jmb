#!/usr/bin/env -S Rscript --vanilla 

main <- function(path = ".", verbose = FALSE) {
    # define function so we don't have to keep checking verbose
    msg <- if (verbose) message else function(...) invisible()

    if (length(path) == 0) {
      path <- "."
    }

    if (length(path) > 1) {
        stop("Only one argument is allowed")
    }

    if (!dir.exists(path)) {
        stop("Directory does not exist")
    }

    rproj <- list.files(path, pattern = "\\.Rproj$")
    new_line <- "LineEndingConversion: Posix"

    if (length(rproj) == 1) {
        x <- readLines(rproj)
        m <- grep("^LineEndingConversion", x)

        if (length(m) == 1) {
            msg("Replacing line ending in ", rproj)
            x[m] <- new_line
            writeLines(x, rproj)
            return(invisible())
        }

        m <- grep("^AutoAppendNew[Ll]ine", x)
        if (length(m) == 1) {
            msg("Adding line ending in ", rproj)
            start <- seq_len(m)
            end <- seq.int(m + 1, length(x))
            start <- f_sort(start)
            end <- f_sort(end)
            x <- c(x[start], new_line, x[end])
            writeLines(x, rproj)
            return(invisible())
        }

        m <- grep("^LaTex", x)
        if (length(m) == 1) {
            msg("Adding line ending in ", rproj)
            start <- seq_len(m + 1)
            end <- seq.int(m + 2, length(x))
            start <- f_sort(start)
            end <- f_sort(end)
            x <- c(x[start], "", new_line, "", x[end])
            writeLines(x, rproj)
            return(invisible())
        }
        msg("No valid placement found")
        return(invisible())
    }

    msg("No Rproj file found")
}

f_sort <- function(x) {
    sort(unique(x))
}

library(scribe)
ca <- command_args()
ca$add_description("Tries to clean up line endings")
ca$add_argument("-p", "--path", default = ".")
ca$add_argument("-v", "--verbose", action = "flag", default = FALSE)
args <- ca$parse()
do.call(main, args)
